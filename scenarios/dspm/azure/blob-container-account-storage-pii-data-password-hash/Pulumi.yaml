name: dspm-azure-blob-container-account-storage-pii-data-password-hash
runtime: yaml
description: The scenario provision an Azure Blob Containers containing PII data and Hash
cnappgoat-params:
  description: |
    In this scenario, two separate Azure Blob Containers within a Storage Account are provisioned with owner access only. 
    One container holds a blob with a CSV file, and the other container holds a blob with an XLSX file. Each file includes 
    users' basic information, along with their corresponding password hashes. The primary goal of this scenario is to simulate 
    Azure Blob Containers that contain sensitive user data, including password hashes. This exercise is designed to assess a 
    data security product's ability to detect and recognize this specific kind of sensitive information. 
    This evaluation is crucial for determining the security product's efficiency in identifying and protecting sensitive 
    user information.
  friendlyName: Azure Blob Containers with PII Data and Password Hash
  id: dspm-azure-blob-container-account-storage-pii-data-password-hash
  config:
    azure-native:location: EastUS2
  module: dspm
  scenarioType: native
  platform: azure

resources:
  cnappgoatResourceGroup:
    type: azure-native:resources:ResourceGroup
  cnappgoataccount:
    type: azure-native:storage:StorageAccount
    properties:
      resourceGroupName: ${cnappgoatResourceGroup.name}
      kind: StorageV2
      sku:
        name: Standard_LRS
  cnappgoatcontainer:
    type: azure-native:storage:BlobContainer
    properties:
      resourceGroupName: ${cnappgoatResourceGroup.name}
      accountName: ${cnappgoataccount.name}

  synced-folder:
    type: synced-folder:index:AzureBlobFolder
    properties:
      resourceGroupName: ${cnappgoatResourceGroup.name}
      storageAccountName: ${cnappgoataccount.name}
      containerName: ${cnappgoatcontainer.name}
      path: ./data/1

  cnappgoatRG2:
    type: azure-native:resources:ResourceGroup
  cnappgoatacc2:
    type: azure-native:storage:StorageAccount
    properties:
      resourceGroupName: ${cnappgoatRG2.name}
      kind: StorageV2
      sku:
        name: Standard_LRS
  cnappgoatcon2:
    type: azure-native:storage:BlobContainer
    properties:
      resourceGroupName: ${cnappgoatRG2.name}
      accountName: ${cnappgoatacc2.name}

  synced-folder2:
    type: synced-folder:index:AzureBlobFolder
    properties:
      resourceGroupName: ${cnappgoatRG2.name}
      storageAccountName: ${cnappgoatacc2.name}
      containerName: ${cnappgoatcon2.name}
      path: ./data/2

outputs:
  cnappgoatresourcegroup: ${cnappgoatResourceGroup.name}
  cnappgoatstorageaccount: ${cnappgoataccount.name}
  cnappgoatcontainer: ${cnappgoatcontainer.name}
  cnappgoatresourcegroup2: ${cnappgoatRG2.name}
  cnappgoatstorageaccount2: ${cnappgoatacc2.name}
  cnappgoatcontainer2: ${cnappgoatcon2.name}